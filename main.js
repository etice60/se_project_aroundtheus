!function(){"use strict";var e=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e,t){const s=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),s.textContent=e.validationMessage,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}toggleButtonState(){if(this._hasInvalidInput(this._inputEls))return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return this._inputEls.some((e=>!e.validity.valid))}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}},t=class{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._popupElementCloseBtn=this._popupElement.querySelector(".modal__close")}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal_is-opened")||e.target.classList.contains("modal__close"))&&this.close()})),this._popupElementCloseBtn.addEventListener("click",(()=>{this.close()}))}open(){this._popupElement.classList.add("modal_is-opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_is-opened"),document.removeEventListener("keyup",this._handleEscClose)}},s=class extends t{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input"),t={};return e.forEach((e=>t[e.name]=e.value)),t}setEventListeners(){this._popupElement.addEventListener("submit",(()=>{this._handleFormSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}close(){this._popupForm.reset(),super.close()}};const r=new class{constructor(e){let{baseUrl:t,authToken:s}=e;this._baseUrl=t,this._authToken=s}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:{authorization:this._authToken}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.log(e)}))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:{authorization:this._authToken}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.log(e)}))}addCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({name:t,link:s})})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",authToken:"1634fdcb-9403-4d55-a456-722f52658f70"}),o=(document.querySelector("#card-template").content.querySelector(".card"),document.querySelector(".card__list"),document.querySelector("#edit-modal")),n=(o.querySelector(".modal__button"),document.querySelector("#add-card-modal")),i=o.querySelector(".modal__form"),l=n.querySelector(".modal__form"),a=document.querySelector("#card-image"),c=(document.querySelector(".modal__card-image-preview"),document.querySelector(".modal__title"),n.querySelector(".modal__button"),document.querySelector(".profile__edit-button")),d=o.querySelector("#modal-close-button"),u=(n.querySelector("#card-close-button"),document.querySelector(".profile__title")),_=document.querySelector(".profile__description"),h=document.querySelector(".profile__add-button"),m=(a.querySelector(".modal__image-close-button"),new class{constructor(e,t){this.name=e,this.description=t}getUserInfo(){return{description:this.description.textContent,name:this.name.textContent}}setUserInfo(e,t){this.name.textContent=e,this.description.textContent=t}}(u,_)),p=i.querySelector(".modal__input_type_name"),E=i.querySelector(".modal__input_type_description"),S=(l.querySelector(".modal__input_type_title"),l.querySelector(".modal__input_type_url"),"#card-template"),y={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},v=o.querySelector(".modal__form"),q=n.querySelector(".modal__form"),b=new e(y,v),C=new e(y,q);b.enableValidation(),C.enableValidation();const f=new s("#add-card-modal",(function(e){r.addCard(e).then((e=>{!function(e){const t=new class{constructor(e,t,s){let{name:r,link:o}=e;this._name=r,this._link=o,this._cardSelector=t,this._handleCardClick=s}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._renderCard(),this._setEventListeners(),this._cardElement}_renderCard(){this._cardElement.querySelector(".card__title").innerText=this._name,this._cardElement.querySelector(".card__image").src=this._link,this._cardElement.querySelector(".card__image").alt=this._name}}(e,S,k);I.addItem(t.getView())}({name:e.title,link:e.url,data:e}),f.close()}))}));f.setEventListeners();const L=new s("#edit-modal",(function(e){m.setUserInfo(e.title,e.description),L.close()}));L.setEventListeners(),Promise.all([r.getUserInfo(),r.getInitialCards()]).then((e=>{let[t,s]=e;m.setUserInfo({name:t.title,job:t.about}),I=new class{constructor(e,t){let{renderer:s,items:r}=e;this._renderer=s,this._items=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}({items:s,renderer:e=>{section.addItem(renderCard(e))}},".card__list"),I.renderItems()}));const g=new class extends t{constructor(e){super({popupSelector:e}),this._popupImage=this._popupElement.querySelector(".modal__card-image-preview"),this._previewText=this._popupElement.querySelector(".modal__title")}open(e,t){this._popupImage.src=t,this._popupImage.alt=e,this._previewText.textContent=e,super.open()}}("#card-image");function k(e,t){g.open(e,t)}let I;g.setEventListeners(),c.addEventListener("click",(function(){!function(){const e=m.getUserInfo();p.value=e.name,E.value=e.description}(),L.open()})),d.addEventListener("click",(()=>L.close())),h.addEventListener("click",(()=>{C.toggleButtonState(),f.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,